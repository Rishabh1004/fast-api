"""empty message

Revision ID: 182887c5b74f
Revises: 
Create Date: 2024-01-22 11:36:57.665609

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import insert


# revision identifiers, used by Alembic.
revision: str = "182887c5b74f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.get_bind()

    op.create_table(
        "city",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("city", sa.String(length=255), server_default="", nullable=False),
        sa.Column("district", sa.String(length=255), server_default="", nullable=False),
        sa.Column("state", sa.String(length=255), server_default="", nullable=False),
        sa.Column("country", sa.String(length=255), server_default="", nullable=False),
        sa.PrimaryKeyConstraint("id"),
        if_not_exists=True,
    )

    



    op.create_table(
        "location",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("geo_id", sa.JSON(), nullable=False),
        sa.Column("address1", sa.String(length=255), nullable=False),
        sa.Column("address2", sa.String(length=255), nullable=True),
        sa.Column("landmark", sa.String(length=255), nullable=True),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("zip_code", sa.Integer(), nullable=True),
        sa.CheckConstraint("zip_code >= 100000 and zip_code <= 999999"),
        sa.PrimaryKeyConstraint("id"),
    )
    
    op.create_table(
        "multilingual_text",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("keys", sa.Integer(), nullable=False),
        sa.Column("lang_code", sa.Integer(), nullable=False),
        sa.Column("display_text", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("lang_code"),
    )
    op.create_index(
        op.f("ix_multilingual_text_keys"), "multilingual_text", ["keys"], unique=True
    )
    op.create_table(
        "b2b_tenant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("ml_name", sa.String(length=255), nullable=True),
        sa.Column("location_id", sa.Integer(), nullable=True),
        sa.Column("media", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["location.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_b2b_tenant_id"), "b2b_tenant", ["id"], unique=False)
    op.create_index(op.f("ix_b2b_tenant_media"), "b2b_tenant", ["media"], unique=False)
    op.create_index(
        op.f("ix_b2b_tenant_ml_name"), "b2b_tenant", ["ml_name"], unique=False
    )
    op.create_index(op.f("ix_b2b_tenant_name"), "b2b_tenant", ["name"], unique=False)
    op.create_table(
        "qomplnt_or",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=255), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=True),
        sa.Column("b2b_tenant_id", sa.Integer(), nullable=True),
        sa.Column("ml_quote", sa.String(length=255), nullable=True),
        sa.Column("ml_sub_text", sa.String(length=255), nullable=True),
        sa.Column("sub_media", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["b2b_tenant_id"],
            ["b2b_tenant.id"],
        ),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["location.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_index(op.f("ix_qomplnt_or_id"), "qomplnt_or", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_qomplnt_or_id"), table_name="qomplnt_or")
    op.drop_table("qomplnt_or")
    op.drop_index(op.f("ix_b2b_tenant_name"), table_name="b2b_tenant")
    op.drop_index(op.f("ix_b2b_tenant_ml_name"), table_name="b2b_tenant")
    op.drop_index(op.f("ix_b2b_tenant_media"), table_name="b2b_tenant")
    op.drop_index(op.f("ix_b2b_tenant_id"), table_name="b2b_tenant")
    op.drop_table("b2b_tenant")
    op.drop_index(op.f("ix_multilingual_text_keys"), table_name="multilingual_text")
    op.drop_table("multilingual_text")
    op.drop_table("location")
    op.drop_table("city")

   